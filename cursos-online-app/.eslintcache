[{"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\index.js":"1","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\App.js":"2","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\reportWebVitals.js":"3","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\theme\\theme.js":"4","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\seguridad\\RegistrarUsuario.js":"5","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\Tool\\Style.js":"6","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\seguridad\\Login.js":"7","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\seguridad\\PerfilUsuario.js":"8","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\actions\\UsuarioAction.js":"9","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\servicios\\HttpCliente.js":"10","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\navegacion\\AppNavbar.js":"11","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\navegacion\\bar\\BarSesion.js":"12","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\initialState.js":"13","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\store.js":"14","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\reducers\\index.js":"15","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\reducers\\openSnackbarReducer.js":"16","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\reducers\\sesionUsuarioReducer.js":"17","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\navegacion\\bar\\menuIzquierda.js":"18","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\navegacion\\bar\\menuDerecha.js":"19","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\actions\\ImagenAction.js":"20"},{"size":794,"mtime":1612839478239,"results":"21","hashOfConfig":"22"},{"size":2597,"mtime":1612801985711,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":430,"mtime":1612284905898,"results":"25","hashOfConfig":"22"},{"size":3939,"mtime":1612381724890,"results":"26","hashOfConfig":"22"},{"size":476,"mtime":1612989032985,"results":"27","hashOfConfig":"22"},{"size":1978,"mtime":1612410440047,"results":"28","hashOfConfig":"22"},{"size":6590,"mtime":1613002719428,"results":"29","hashOfConfig":"22"},{"size":1563,"mtime":1612838721504,"results":"30","hashOfConfig":"22"},{"size":1023,"mtime":1612386493022,"results":"31","hashOfConfig":"22"},{"size":277,"mtime":1612715760241,"results":"32","hashOfConfig":"22"},{"size":4706,"mtime":1612895243215,"results":"33","hashOfConfig":"22"},{"size":143,"mtime":1612726192819,"results":"34","hashOfConfig":"22"},{"size":833,"mtime":1612726478544,"results":"35","hashOfConfig":"22"},{"size":408,"mtime":1612743007506,"results":"36","hashOfConfig":"22"},{"size":730,"mtime":1612737816529,"results":"37","hashOfConfig":"22"},{"size":1187,"mtime":1612737786781,"results":"38","hashOfConfig":"22"},{"size":1653,"mtime":1612889388362,"results":"39","hashOfConfig":"22"},{"size":803,"mtime":1612895292629,"results":"40","hashOfConfig":"22"},{"size":886,"mtime":1612991263256,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kvp1c1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\index.js",[],["87","88"],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\App.js",["89","90"],"import React, { useState, useEffect } from 'react';\n//entrega las librerias de material design \nimport {ThemeProvider as MuithemeProvider}  from \"@material-ui/core/styles\";\nimport {Grid, Snackbar}  from \"@material-ui/core\";\n//importar el tema con los parametros que definimos del theme\nimport theme from \"./theme/theme\";\nimport RegistrarUsuario from './componentes/seguridad/RegistrarUsuario';\nimport PerfilUsuario from './componentes/seguridad/PerfilUsuario';\nimport Login from './componentes/seguridad/Login';\n//enrutador, componente, ruta\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport AppNavbar from './componentes/navegacion/AppNavbar';\nimport { useStateValue } from './contexto/store';\nimport { obtenerUsuarioActual } from './actions/UsuarioAction';\n\nfunction App() {\n  //obtener sesion de usuario\n  //dispatch es una representacion del contexto\n   //referencia a la clase global snackbar\n  const [{sesionUsuario, openSnackbar}, dispatch] = useStateValue();\n\n  //variable local\n  //para saber si el request fue o no hecho al servidor\n  const [iniciaApp, setInicialApp] = useState(false);\n  //una vez que se haya cargado el iniciaapp lo evalua\n  useEffect(() => {\n    if(!iniciaApp){\n      //que vaya al servidor y traiga el usuario actual\n      obtenerUsuarioActual(dispatch).then(response => {\n        setInicialApp(true);\n      }).catch(error => {\n        setInicialApp(true);\n      })\n    }\n  }, [iniciaApp])\n\nreturn (\n\n  <React.Fragment>\n    <Snackbar \n      anchorOrigin={{ vertical:\"bottom\", horizontal:\"center\" }}\n      open={openSnackbar ? openSnackbar.open : false}\n      autoHideDuration={3000}\n      ContentProps={{\"aria-describedby\": \"message-id\"}}\n      message = {\n        <span id=\"message-id\">{openSnackbar ? openSnackbar.mensaje : \"\" }</span>\n      }\n      onClose= { () => \n        dispatch({\n          type : \"OPEN_SNACKBAR\",\n          openMensaje : {\n            open : false,\n            mensaje : \"\"\n          }\n        })\n      }\n    >\n\n    </Snackbar>\n      <Router>\n        <MuithemeProvider theme={theme}>\n          <AppNavbar />\n            <Grid container>\n              <Switch>\n                <Route exact path=\"/auth/login\" component={Login} />\n                <Route exact path=\"/auth/registrar\" component={RegistrarUsuario} />\n                <Route exact path=\"/auth/perfil\" component={PerfilUsuario} />\n                <Route exact path=\"/\" component={PerfilUsuario} />\n              </Switch>\n\n            </Grid>\n        \n\n\n\n        </MuithemeProvider>\n      </Router>\n  </React.Fragment>\n\n\n\n  \n)\n}\n\nexport default App;\n","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\reportWebVitals.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\theme\\theme.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\seguridad\\RegistrarUsuario.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\Tool\\Style.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\seguridad\\Login.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\seguridad\\PerfilUsuario.js",["91"],"import React, {useState, useEffect} from 'react';\r\nimport { Container,Typography, Grid, TextField, Button, Avatar } from '@material-ui/core';\r\nimport style from '../Tool/Style';\r\nimport { actualizarUsuario, obtenerUsuarioActual } from '../../actions/UsuarioAction';\r\nimport { obtenerDataImagen } from '../../actions/ImagenAction';\r\nimport { useStateValue } from '../../contexto/store';\r\nimport reactFoto from '../../logo.svg';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nconst PerfilUsuario = () => {\r\n    const [{sesionUsuario }, dispatch] = useStateValue();\r\n    //variable de estado para manejar el token\r\n    const [usuario, setUsuario] = useState({\r\n            nombreCompleto : '',\r\n            email : '',\r\n            password : '',\r\n            confirmarPassword: '',\r\n            username : '',\r\n            //foto tienen que ser un arreglo para poder guardarlo en el servidor\r\n            imagenPerfil : null,\r\n            fotoUrl : ''\r\n    })\r\n\r\n    //esta funcion recibe los valores de la caja de texto con el metodo onChange y el value\r\n    const ingresarValoresMemoria = e => {\r\n        const {name, value} = e.target;\r\n        //que mantenga los valores que tenia y solo los cambie por los valores que se ingresen\r\n        setUsuario( anterior => ({\r\n            ...anterior,\r\n            [name] : value\r\n        }));\r\n    }\r\n\r\n    //useEffect\r\n    //que se rellenen los datos cuando haya terminado la carga\r\n    //se ejecuta una sola vez xq no se le esta pidiendo que evalue ninguna variable\r\n    useEffect(( )=> {\r\n        obtenerUsuarioActual().then(response => {\r\n            console.log('data del response', response);\r\n            //rellene los datos con el response\r\n            setUsuario(response.data);\r\n        });\r\n    }, [])\r\n\r\n    //guardar usuario\r\n    //se genera un nuevo token y hay que guardarlo en el localstorage\r\n    const guardarUsuario = e => {\r\n        //evita que refresque toda la pagina, solo refresca lo que se modifica\r\n        e.preventDefault();\r\n        actualizarUsuario(usuario).then(response => {\r\n\r\n                if(response.status === 200){\r\n                    dispatch({\r\n                        type : \"OPEN_SNACKBAR\",\r\n                        openMensaje : {\r\n                            open : true,\r\n                            mensaje : \"Se guardaron exitosamente los cambios en Perfil Usuario\"\r\n                        }\r\n                    })\r\n                    window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n                }else{\r\n                    dispatch({\r\n                        type : \"OPEN_SNACKBAR\",\r\n                        openMensaje : {\r\n                            open : true,\r\n                            mensaje : \"Errores al intentar guardar en: \" + Object.keys(response.data.errors) \r\n                        }\r\n                    })\r\n                }\r\n\r\n            //console.log('se actualizó el usuario', response);\r\n           // \r\n        })\r\n    }\r\n\r\n    //capturar la foto\r\n    const subirFoto = imagenes => {\r\n        const foto = imagenes[0];\r\n        //el archivo lo convierte en una url local\r\n        const fotoUrl = URL.createObjectURL(foto);\r\n\r\n        //llama funcion global para obtener la extension del archivo\r\n        //src/actions/ImagenAction.js\r\n        obtenerDataImagen(foto).then(respuesta => {\r\n            console.log('respuesta', respuesta);\r\n            setUsuario(anterior => ({\r\n                ...anterior,\r\n                imagenPerfil : respuesta, //respuesta es un json que proviene del action obtener imagen {data: ..., nombre: ...etc}\r\n                fotoUrl : fotoUrl //archivo en formato URL\r\n            }) );\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    const fotoKey = uuidv4();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n            <div style={style.paper}>\r\n                <Avatar style={style.avatar} src={usuario.fotoUrl || reactFoto} />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Perfil de Usuario\r\n                </Typography>\r\n           \r\n            <form style={style.form}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <TextField name=\"nombreCompleto\" value={usuario.nombreCompleto || \"\"} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label=\"Ingrese Nombre y Apellidos\"/>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField name=\"username\" value={usuario.username || \"\"} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label=\"Ingrese Username\"/>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField name=\"email\" value={usuario.email || \"\"} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label=\"Ingrese email\"/>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField name=\"password\" value={usuario.password || \"\"} onChange={ingresarValoresMemoria} type=\"password\" variant=\"outlined\" fullWidth label=\"Ingrese Password\"/>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField name=\"confirmarPassword\" value={usuario.confirmarPassword || \"\"} onChange={ingresarValoresMemoria} type=\"password\" variant=\"outlined\" fullWidth label=\"Confirme Password\"/>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12}>\r\n                        <ImageUploader \r\n                            withIcon = {false}\r\n                            key={fotoKey}\r\n                            singleImage = {true}\r\n                            buttonText = \"Seleccione una imagen de perfil\"\r\n                            onChange = {subirFoto}\r\n                            imgExtension = {[\".jpg\",\".gif\",\".png\",\".jpeg\"]}\r\n                            maxFileSize = {5242880}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={12} md={6}>\r\n                        <Button type=\"submit\" onClick = {guardarUsuario} fullWidth variant=\"contained\" size=\"large\" color=\"primary\" style={style.submit}>\r\n                            Guardar Datos\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PerfilUsuario;","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\actions\\UsuarioAction.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\servicios\\HttpCliente.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\navegacion\\AppNavbar.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\navegacion\\bar\\BarSesion.js",["92","93","94","95"],"import React, { useState } from 'react';\r\nimport {IconButton, Toolbar, Typography, makeStyles, Button, Avatar, Drawer, List, ListItem, ListItemText} from '@material-ui/core';\r\nimport FotoUsuarioTemp from \"../../../logo.svg\";\r\nimport {useStateValue} from '../../../contexto/store';\r\nimport { MenuIzquierda } from './menuIzquierda';\r\nimport { MenuDerecha } from './menuDerecha';\r\n//para que las propiedades de navegacion puedan trabajarse\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//invoca las librerias responsive de material design\r\nconst useStyles = makeStyles((theme) => ({\r\n    //para una computadora\r\n    //display none, oculta todo\r\n    //theme.breakpoints.up ->hasta que reconozca que esta en un dispositivo grande\r\n    //entonces se haria flex\r\n    seccionDesktop : {\r\n        display : \"none\",\r\n        [theme.breakpoints.up(\"md\")] : {\r\n            display : \"flex\"\r\n        }\r\n\r\n    },\r\n    //empieza siendo un flex, pero si reconoce que es un dispositivo grande, lo oculta\r\n    seccionMobile :{\r\n        display : \"flex\",\r\n        [theme.breakpoints.up(\"md\")] : {\r\n            display : \"none\"\r\n        }\r\n    },\r\n    //toma todo el espacio disponible en un div\r\n    grow : {\r\n        flexGrow : 1\r\n    },\r\n    //define el tamaño de la foto del usuario\r\n    avatarSize : {\r\n        width : 40,\r\n        height : 40\r\n    },\r\n    list : {\r\n        width : 250\r\n    },\r\n    listItemText : {\r\n        fontSize : \"14px\",\r\n        fontWeight : 600,\r\n        paddingLeft: \"15px\",\r\n        color : \"#212121\"\r\n    }\r\n}))\r\n\r\nconst BarSesion = (props) => {\r\n    const classes = useStyles();\r\n    //traemos la sesion del usuario desde el index.js de los reducers\r\n    const [{sesionUsuario}, dispatch] = useStateValue();\r\n    //variable para abrir el drawer izquierdo\r\n    const [abrirMenuIzquierda, setAbrirMenuIzquierda] = useState(false);\r\n    //variable para abrir el drawer derecho\r\n    const [abrirMenuDerecha, setAbrirMenuDerecha] = useState(false);\r\n\r\n    const cerrarMenuIzquierda = () => {\r\n        setAbrirMenuIzquierda(false);\r\n    }\r\n\r\n    const abrirMenuIzquierdaAction = () => {\r\n        setAbrirMenuIzquierda(true);\r\n    }\r\n\r\n    const cerrarMenuDerecha = () => {\r\n        setAbrirMenuDerecha(false);\r\n    }\r\n\r\n    //eliminar el token para salir de sesion y redirigir a login\r\n    //props son las propiedades del BarSesion\r\n    const salirSesionApp = () => {\r\n        localStorage.removeItem('token_seguridad');\r\n        props.history.push('/auth/login');\r\n    }\r\n\r\n    const abrirMenuDerechaAction = () => {\r\n        setAbrirMenuDerecha(true);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n             <Drawer \r\n                open = {abrirMenuIzquierda}\r\n                onClose = {cerrarMenuIzquierda}\r\n                anchor = \"left\"\r\n             >\r\n                 <div className = {classes.list} onKeyDown={cerrarMenuIzquierda} onClick={cerrarMenuIzquierda}>\r\n                    <MenuIzquierda classes={classes}/>\r\n                 </div>\r\n            </Drawer>\r\n\r\n            <Drawer\r\n            open = { abrirMenuDerecha }\r\n            onClose = {cerrarMenuDerecha}\r\n            anchor = \"right\"\r\n            >\r\n                <div role=\"button\" onKeyDown={cerrarMenuDerecha} onClick={cerrarMenuDerecha}>\r\n                    <MenuDerecha \r\n                        classes={classes} \r\n                        salirSesion={salirSesionApp}\r\n                        usuario = { sesionUsuario ? sesionUsuario.usuario : null}\r\n                    />\r\n                 </div>\r\n\r\n            </Drawer>\r\n\r\n\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\" onClick={abrirMenuIzquierdaAction}>\r\n                    <i className=\"material-icons\">menu</i>\r\n                </IconButton>\r\n\r\n                <Typography variant=\"h6\">Cursos Online</Typography>\r\n                <div className={classes.grow}></div>\r\n\r\n                <div className={classes.seccionDesktop}>\r\n                    <Button color=\"inherit\">\r\n                        Salir\r\n                    </Button>\r\n                    <Button color=\"inherit\">\r\n                        {sesionUsuario ? sesionUsuario.usuario.nombreCompleto : \"\"}\r\n                    </Button>\r\n                    <Avatar src={FotoUsuarioTemp}>\r\n\r\n                    </Avatar>\r\n                </div>\r\n\r\n                <div className={classes.seccionMobile} >\r\n                    <IconButton color=\"inherit\" onClick={abrirMenuDerechaAction}>\r\n                        <i className=\"material-icons\">more_vert</i>\r\n                    </IconButton>\r\n\r\n                </div>\r\n                \r\n            </Toolbar>\r\n        </React.Fragment>\r\n\r\n       \r\n    );\r\n};\r\n\r\nexport default withRouter(BarSesion);","C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\initialState.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\store.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\reducers\\index.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\reducers\\openSnackbarReducer.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\contexto\\reducers\\sesionUsuarioReducer.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\navegacion\\bar\\menuIzquierda.js",[],["96","97"],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\componentes\\navegacion\\bar\\menuDerecha.js",[],"C:\\CursosCoreVs31\\CursosCoreVs31\\cursos-online-app\\src\\actions\\ImagenAction.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":20,"column":11,"nodeType":"104","messageId":"105","endLine":20,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":35,"column":6,"nodeType":"108","endLine":35,"endColumn":17,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"103","line":12,"column":13,"nodeType":"104","messageId":"105","endLine":12,"endColumn":26},{"ruleId":"102","severity":1,"message":"110","line":2,"column":78,"nodeType":"104","messageId":"105","endLine":2,"endColumn":82},{"ruleId":"102","severity":1,"message":"111","line":2,"column":84,"nodeType":"104","messageId":"105","endLine":2,"endColumn":92},{"ruleId":"102","severity":1,"message":"112","line":2,"column":94,"nodeType":"104","messageId":"105","endLine":2,"endColumn":106},{"ruleId":"102","severity":1,"message":"113","line":53,"column":29,"nodeType":"104","messageId":"105","endLine":53,"endColumn":37},{"ruleId":"98","replacedBy":"114"},{"ruleId":"100","replacedBy":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'sesionUsuario' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'dispatch' is assigned a value but never used.",["116"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [dispatch, iniciaApp]",{"range":"121","text":"122"},[1438,1449],"[dispatch, iniciaApp]"]